
BlinkLEDs.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000238  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000028c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000028c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002b4  00000000  00000000  00000318  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000e2  00000000  00000000  000005cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002bf  00000000  00000000  000006ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000970  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000170  00000000  00000000  00000994  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000136  00000000  00000000  00000b04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00000c3a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 1a 01 	jmp	0x234	; 0x234 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define LED2		PORTB

int main(void)
{
	uint8_t i;
	LED1_DDR = 0xFF; //LEDs as OUTPUT
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	LED2_DDR = 0xFF; //LEDs as OUTPUT
  70:	87 bb       	out	0x17, r24	; 23
#define LED2_DDR	DDRB	//active-LOW LEDs
#define LED1		PORTA
#define LED2		PORTB

int main(void)
{
  72:	07 e0       	ldi	r16, 0x07	; 7
			LED1^= 0xFF;
			LED2= ~LED1;
			_delay_ms(100);
		}
		LED1=0;
		LED2=0xFF;
  74:	cf ef       	ldi	r28, 0xFF	; 255
		for (i=0;i<7;i++)
		{
			LED1^= 0xAA;
  76:	ba ea       	ldi	r27, 0xAA	; 170
			LED2= ~LED1;
			_delay_ms(100);
			LED1=0;
			LED2= ~LED1;
			_delay_ms(100);
			LED1^= 0x55;
  78:	a5 e5       	ldi	r26, 0x55	; 85
			LED2= ~LED1;
			_delay_ms(100);
		}
		LED1=0;
		LED2=0xFF;
  7a:	10 e0       	ldi	r17, 0x00	; 0
  7c:	d0 e0       	ldi	r29, 0x00	; 0
		for (i=0;i<7;i++)
		{
			LED1=(1<<i);
  7e:	41 e0       	ldi	r20, 0x01	; 1
  80:	50 e0       	ldi	r21, 0x00	; 0
			LED2=~(0x80>>i);
  82:	20 e8       	ldi	r18, 0x80	; 128
  84:	30 e0       	ldi	r19, 0x00	; 0
#define LED2_DDR	DDRB	//active-LOW LEDs
#define LED1		PORTA
#define LED2		PORTB

int main(void)
{
  86:	90 2f       	mov	r25, r16
	
	while (1) 
    {
		for (i=0;i<7;i++)
		{
			LED1^= 0xFF;
  88:	8b b3       	in	r24, 0x1b	; 27
  8a:	80 95       	com	r24
  8c:	8b bb       	out	0x1b, r24	; 27
			LED2= ~LED1;
  8e:	8b b3       	in	r24, 0x1b	; 27
  90:	80 95       	com	r24
  92:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  94:	6f ef       	ldi	r22, 0xFF	; 255
  96:	71 ee       	ldi	r23, 0xE1	; 225
  98:	84 e0       	ldi	r24, 0x04	; 4
  9a:	61 50       	subi	r22, 0x01	; 1
  9c:	70 40       	sbci	r23, 0x00	; 0
  9e:	80 40       	sbci	r24, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <main+0x2e>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x38>
  a4:	00 00       	nop
  a6:	91 50       	subi	r25, 0x01	; 1
	LED1_DDR = 0xFF; //LEDs as OUTPUT
	LED2_DDR = 0xFF; //LEDs as OUTPUT
	
	while (1) 
    {
		for (i=0;i<7;i++)
  a8:	79 f7       	brne	.-34     	; 0x88 <main+0x1c>
		{
			LED1^= 0xFF;
			LED2= ~LED1;
			_delay_ms(100);
		}
		LED1=0;
  aa:	1b ba       	out	0x1b, r1	; 27
		LED2=0xFF;
  ac:	c8 bb       	out	0x18, r28	; 24
  ae:	90 2f       	mov	r25, r16
		for (i=0;i<7;i++)
		{
			LED1^= 0xAA;
  b0:	8b b3       	in	r24, 0x1b	; 27
  b2:	8b 27       	eor	r24, r27
  b4:	8b bb       	out	0x1b, r24	; 27
			LED2= ~LED1;
  b6:	8b b3       	in	r24, 0x1b	; 27
  b8:	80 95       	com	r24
  ba:	88 bb       	out	0x18, r24	; 24
  bc:	ef ef       	ldi	r30, 0xFF	; 255
  be:	61 ee       	ldi	r22, 0xE1	; 225
  c0:	74 e0       	ldi	r23, 0x04	; 4
  c2:	e1 50       	subi	r30, 0x01	; 1
  c4:	60 40       	sbci	r22, 0x00	; 0
  c6:	70 40       	sbci	r23, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x56>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x60>
  cc:	00 00       	nop
			_delay_ms(100);
			LED1=0;
  ce:	1b ba       	out	0x1b, r1	; 27
			LED2= ~LED1;
  d0:	8b b3       	in	r24, 0x1b	; 27
  d2:	80 95       	com	r24
  d4:	88 bb       	out	0x18, r24	; 24
  d6:	8f ef       	ldi	r24, 0xFF	; 255
  d8:	e1 ee       	ldi	r30, 0xE1	; 225
  da:	64 e0       	ldi	r22, 0x04	; 4
  dc:	81 50       	subi	r24, 0x01	; 1
  de:	e0 40       	sbci	r30, 0x00	; 0
  e0:	60 40       	sbci	r22, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <main+0x70>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x7a>
  e6:	00 00       	nop
			_delay_ms(100);
			LED1^= 0x55;
  e8:	8b b3       	in	r24, 0x1b	; 27
  ea:	8a 27       	eor	r24, r26
  ec:	8b bb       	out	0x1b, r24	; 27
			LED2= ~LED1;
  ee:	8b b3       	in	r24, 0x1b	; 27
  f0:	80 95       	com	r24
  f2:	88 bb       	out	0x18, r24	; 24
  f4:	7f ef       	ldi	r23, 0xFF	; 255
  f6:	81 ee       	ldi	r24, 0xE1	; 225
  f8:	e4 e0       	ldi	r30, 0x04	; 4
  fa:	71 50       	subi	r23, 0x01	; 1
  fc:	80 40       	sbci	r24, 0x00	; 0
  fe:	e0 40       	sbci	r30, 0x00	; 0
 100:	e1 f7       	brne	.-8      	; 0xfa <main+0x8e>
 102:	00 c0       	rjmp	.+0      	; 0x104 <main+0x98>
 104:	00 00       	nop
 106:	91 50       	subi	r25, 0x01	; 1
			LED2= ~LED1;
			_delay_ms(100);
		}
		LED1=0;
		LED2=0xFF;
		for (i=0;i<7;i++)
 108:	99 f6       	brne	.-90     	; 0xb0 <main+0x44>
			_delay_ms(100);
			LED1^= 0x55;
			LED2= ~LED1;
			_delay_ms(100);
		}
		LED1=0;
 10a:	1b ba       	out	0x1b, r1	; 27
		LED2=0xFF;
 10c:	c8 bb       	out	0x18, r28	; 24
 10e:	81 2f       	mov	r24, r17
 110:	9d 2f       	mov	r25, r29
		for (i=0;i<7;i++)
		{
			LED1=(1<<i);
 112:	ba 01       	movw	r22, r20
 114:	08 2e       	mov	r0, r24
 116:	02 c0       	rjmp	.+4      	; 0x11c <main+0xb0>
 118:	66 0f       	add	r22, r22
 11a:	77 1f       	adc	r23, r23
 11c:	0a 94       	dec	r0
 11e:	e2 f7       	brpl	.-8      	; 0x118 <main+0xac>
 120:	6b bb       	out	0x1b, r22	; 27
			LED2=~(0x80>>i);
 122:	b9 01       	movw	r22, r18
 124:	08 2e       	mov	r0, r24
 126:	02 c0       	rjmp	.+4      	; 0x12c <main+0xc0>
 128:	75 95       	asr	r23
 12a:	67 95       	ror	r22
 12c:	0a 94       	dec	r0
 12e:	e2 f7       	brpl	.-8      	; 0x128 <main+0xbc>
 130:	60 95       	com	r22
 132:	68 bb       	out	0x18, r22	; 24
 134:	6f ef       	ldi	r22, 0xFF	; 255
 136:	71 ee       	ldi	r23, 0xE1	; 225
 138:	e4 e0       	ldi	r30, 0x04	; 4
 13a:	61 50       	subi	r22, 0x01	; 1
 13c:	70 40       	sbci	r23, 0x00	; 0
 13e:	e0 40       	sbci	r30, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0xce>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0xd8>
 144:	00 00       	nop
 146:	01 96       	adiw	r24, 0x01	; 1
			LED2= ~LED1;
			_delay_ms(100);
		}
		LED1=0;
		LED2=0xFF;
		for (i=0;i<7;i++)
 148:	87 30       	cpi	r24, 0x07	; 7
 14a:	91 05       	cpc	r25, r1
 14c:	11 f7       	brne	.-60     	; 0x112 <main+0xa6>
		{
			LED1=(1<<i);
			LED2=~(0x80>>i);
			_delay_ms(100);
		}
		LED1=0;
 14e:	1b ba       	out	0x1b, r1	; 27
		LED2=0xFF;
 150:	c8 bb       	out	0x18, r28	; 24
 152:	81 2f       	mov	r24, r17
 154:	9d 2f       	mov	r25, r29
		for (i=0;i<7;i++)
		{
			LED1=(0x80>>i);
 156:	b9 01       	movw	r22, r18
 158:	08 2e       	mov	r0, r24
 15a:	02 c0       	rjmp	.+4      	; 0x160 <main+0xf4>
 15c:	75 95       	asr	r23
 15e:	67 95       	ror	r22
 160:	0a 94       	dec	r0
 162:	e2 f7       	brpl	.-8      	; 0x15c <main+0xf0>
 164:	6b bb       	out	0x1b, r22	; 27
			LED2=~(1<<i);
 166:	ba 01       	movw	r22, r20
 168:	08 2e       	mov	r0, r24
 16a:	02 c0       	rjmp	.+4      	; 0x170 <main+0x104>
 16c:	66 0f       	add	r22, r22
 16e:	77 1f       	adc	r23, r23
 170:	0a 94       	dec	r0
 172:	e2 f7       	brpl	.-8      	; 0x16c <main+0x100>
 174:	60 95       	com	r22
 176:	68 bb       	out	0x18, r22	; 24
 178:	6f ef       	ldi	r22, 0xFF	; 255
 17a:	71 ee       	ldi	r23, 0xE1	; 225
 17c:	e4 e0       	ldi	r30, 0x04	; 4
 17e:	61 50       	subi	r22, 0x01	; 1
 180:	70 40       	sbci	r23, 0x00	; 0
 182:	e0 40       	sbci	r30, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <main+0x112>
 186:	00 c0       	rjmp	.+0      	; 0x188 <main+0x11c>
 188:	00 00       	nop
 18a:	01 96       	adiw	r24, 0x01	; 1
			LED2=~(0x80>>i);
			_delay_ms(100);
		}
		LED1=0;
		LED2=0xFF;
		for (i=0;i<7;i++)
 18c:	87 30       	cpi	r24, 0x07	; 7
 18e:	91 05       	cpc	r25, r1
 190:	11 f7       	brne	.-60     	; 0x156 <main+0xea>
		{
			LED1=(0x80>>i);
			LED2=~(1<<i);
			_delay_ms(100);
		}
		LED1=0;
 192:	1b ba       	out	0x1b, r1	; 27
		LED2=0xFF;
 194:	c8 bb       	out	0x18, r28	; 24
 196:	81 2f       	mov	r24, r17
 198:	9d 2f       	mov	r25, r29
		for (i=0;i<7;i++)
		{
			LED1|=(1<<i);
 19a:	eb b3       	in	r30, 0x1b	; 27
 19c:	ba 01       	movw	r22, r20
 19e:	08 2e       	mov	r0, r24
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <main+0x13a>
 1a2:	66 0f       	add	r22, r22
 1a4:	77 1f       	adc	r23, r23
 1a6:	0a 94       	dec	r0
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <main+0x136>
 1aa:	6e 2b       	or	r22, r30
 1ac:	6b bb       	out	0x1b, r22	; 27
			LED2&=~(0X80>>i);
 1ae:	78 b3       	in	r23, 0x18	; 24
 1b0:	f9 01       	movw	r30, r18
 1b2:	08 2e       	mov	r0, r24
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <main+0x14e>
 1b6:	f5 95       	asr	r31
 1b8:	e7 95       	ror	r30
 1ba:	0a 94       	dec	r0
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <main+0x14a>
 1be:	6e 2f       	mov	r22, r30
 1c0:	60 95       	com	r22
 1c2:	67 23       	and	r22, r23
 1c4:	68 bb       	out	0x18, r22	; 24
 1c6:	6f ef       	ldi	r22, 0xFF	; 255
 1c8:	71 ee       	ldi	r23, 0xE1	; 225
 1ca:	e4 e0       	ldi	r30, 0x04	; 4
 1cc:	61 50       	subi	r22, 0x01	; 1
 1ce:	70 40       	sbci	r23, 0x00	; 0
 1d0:	e0 40       	sbci	r30, 0x00	; 0
 1d2:	e1 f7       	brne	.-8      	; 0x1cc <main+0x160>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <main+0x16a>
 1d6:	00 00       	nop
 1d8:	01 96       	adiw	r24, 0x01	; 1
			LED2=~(1<<i);
			_delay_ms(100);
		}
		LED1=0;
		LED2=0xFF;
		for (i=0;i<7;i++)
 1da:	87 30       	cpi	r24, 0x07	; 7
 1dc:	91 05       	cpc	r25, r1
 1de:	e9 f6       	brne	.-70     	; 0x19a <main+0x12e>
		{
			LED1|=(1<<i);
			LED2&=~(0X80>>i);
			_delay_ms(100);
		}
		LED1=0;
 1e0:	1b ba       	out	0x1b, r1	; 27
		LED2=0xFF;
 1e2:	c8 bb       	out	0x18, r28	; 24
 1e4:	81 2f       	mov	r24, r17
 1e6:	9d 2f       	mov	r25, r29
		for (i=0;i<7;i++)
		{
			LED1|=(0X80>>i);
 1e8:	eb b3       	in	r30, 0x1b	; 27
 1ea:	b9 01       	movw	r22, r18
 1ec:	08 2e       	mov	r0, r24
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <main+0x188>
 1f0:	75 95       	asr	r23
 1f2:	67 95       	ror	r22
 1f4:	0a 94       	dec	r0
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <main+0x184>
 1f8:	6e 2b       	or	r22, r30
 1fa:	6b bb       	out	0x1b, r22	; 27
			LED2&=~(1<<i);
 1fc:	78 b3       	in	r23, 0x18	; 24
 1fe:	fa 01       	movw	r30, r20
 200:	08 2e       	mov	r0, r24
 202:	02 c0       	rjmp	.+4      	; 0x208 <main+0x19c>
 204:	ee 0f       	add	r30, r30
 206:	ff 1f       	adc	r31, r31
 208:	0a 94       	dec	r0
 20a:	e2 f7       	brpl	.-8      	; 0x204 <main+0x198>
 20c:	6e 2f       	mov	r22, r30
 20e:	60 95       	com	r22
 210:	67 23       	and	r22, r23
 212:	68 bb       	out	0x18, r22	; 24
 214:	6f ef       	ldi	r22, 0xFF	; 255
 216:	71 ee       	ldi	r23, 0xE1	; 225
 218:	e4 e0       	ldi	r30, 0x04	; 4
 21a:	61 50       	subi	r22, 0x01	; 1
 21c:	70 40       	sbci	r23, 0x00	; 0
 21e:	e0 40       	sbci	r30, 0x00	; 0
 220:	e1 f7       	brne	.-8      	; 0x21a <main+0x1ae>
 222:	00 c0       	rjmp	.+0      	; 0x224 <main+0x1b8>
 224:	00 00       	nop
 226:	01 96       	adiw	r24, 0x01	; 1
			LED2&=~(0X80>>i);
			_delay_ms(100);
		}
		LED1=0;
		LED2=0xFF;
		for (i=0;i<7;i++)
 228:	87 30       	cpi	r24, 0x07	; 7
 22a:	91 05       	cpc	r25, r1
 22c:	e9 f6       	brne	.-70     	; 0x1e8 <main+0x17c>
		{
			LED1|=(0X80>>i);
			LED2&=~(1<<i);
			_delay_ms(100);
		}
		LED1=0;
 22e:	1b ba       	out	0x1b, r1	; 27
		LED2=0xFF;
 230:	c8 bb       	out	0x18, r28	; 24
    }
 232:	29 cf       	rjmp	.-430    	; 0x86 <main+0x1a>

00000234 <_exit>:
 234:	f8 94       	cli

00000236 <__stop_program>:
 236:	ff cf       	rjmp	.-2      	; 0x236 <__stop_program>
